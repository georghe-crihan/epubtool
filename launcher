#!/bin/sh
# Alas, sys.argv is a singleton in Jython. This, combined with NailGun, makes it
# effectively constant (i.e. unchangeable in subsequent runs).
# To make things even worse, the Jython runtime latches current working
# directory to where the NailGun server has been started from.
# The above makes it very tricky to have several classes running, while passing
# arguments. For example, the full path to the script to be run is required.
# Also, the env(1) on OSX seems to be broken: it doesn't handle quotes correctly
# and it's not possible to expand variables.
# Hence the below script.

if [ -z "${1}" ]; then
	SRCDIR=example
fi

if [ -z "${2}" ]; then
	TARGET=example.epub
fi

if [ -z "${3}" ]; then
	TOCLIST=toc.json
fi

ng ng-jython -c "

from os import chdir 
from os.path import join as pathjoin
from sys import exit, path as syspath
cwd = '${PWD}'
chdir(cwd)
syspath.append(pathjoin(cwd, '..', '..', 'text-tools', 'epubtool'))
from example import OWNEpub

suppress = [ \
'attribute \"name\" not allowed here; expected attribute \"accesskey\", \"charset\", \"class\", \"coords\", \"dir\", \"href\", \"hreflang\", \"id\", \"lang\", \"rel\", \"rev\", \"shape\", \"style\", \"tabindex\", \"target\", \"title\", \"type\" or \"xml:lang\"', \
'attribute \"width\" not allowed here; expected attribute \"class\", \"dir\", \"id\", \"lang\", \"style\", \"title\" or \"xml:lang\"', \
'attribute \"size\" not allowed here; expected attribute \"class\", \"dir\", \"id\", \"lang\", \"style\", \"title\" or \"xml:lang\"', \
'attribute \"align\" not allowed here; expected attribute \"class\", \"dir\", \"id\", \"lang\", \"style\", \"title\" or \"xml:lang\"', \
'attribute \"noshade\" not allowed here; expected attribute \"class\", \"dir\", \"id\", \"lang\", \"style\", \"title\" or \"xml:lang\"', \
'attribute \"color\" not allowed here; expected attribute \"class\", \"dir\", \"id\", \"lang\", \"style\", \"title\" or \"xml:lang\"', \
'element \"center\" not allowed anywhere; expected the element end-tag, text or element \"a\", \"abbr\", \"acronym\", \"address\", \"applet\", \"b\", \"bdo\", \"big\", \"blockquote\", \"br\", \"cite\", \"code\", \"del\", \"dfn\", \"div\", \"dl\", \"em\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"hr\", \"i\", \"iframe\", \"img\", \"ins\", \"kbd\", \"map\", \"noscript\", \"ns:svg\", \"object\", \"ol\", \"p\", \"pre\", \"q\", \"samp\", \"script\", \"small\", \"span\", \"strong\", \"sub\", \"sup\", \"table\", \"tt\", \"ul\" or \"var\" (with xmlns:ns=\"http://www.w3.org/2000/svg\")', \
]
 
srcdir = pathjoin(cwd, '${SRCDIR}')
target = pathjoin(cwd, '${TARGET}')
toclist = pathjoin(cwd, '${TOCLIST}')
E = OWNEpub(srcdir, target, 'cover', toclist)
E.write_epub(overwrite=True)
E.validate(suppress=suppress)
print 'Suppressed %d messages.' % (E.get_suppress_count(),)
exit(0)
"
